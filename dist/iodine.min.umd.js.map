{"version":3,"file":"iodine.min.umd.js","sources":["../src/iodine.js"],"sourcesContent":["/*\n|--------------------------------------------------------------------------\n| Iodine - JavaScript Library\n|--------------------------------------------------------------------------\n|\n| This library contains a collection of useful validation rules that can\n| be used to quickly verify whether items meet certain conditions.\n|\n*/\nexport default class Iodine\n{\n\n\t/**\n\t * @internal.\n\t *\n\t **/\n\t_dateCompare(first, second, type, equals = false)\n\t{\n\t\tif (! this.isDate(first)) return false;\n\n\t\tif (! this.isDate(second) && ! this.isInteger(second)) return false;\n\n\t\tsecond = typeof second === 'number' ? second : second.getTime();\n\n\t\tif (type === 'less' && equals) return first.getTime() <= second;\n\t\tif (type === 'less' && ! equals) return first.getTime() < second;\n\t\tif (type === 'more' && equals) return first.getTime() >= second;\n\t\tif (type === 'more' && ! equals) return first.getTime() > second;\n\t}\n\n\n\n\t/**\n\t * Determine if the given date is after another given date.\n\t *\n\t **/\n\tisAfter(value, after)\n\t{\n\t\treturn this._dateCompare(value, after, 'more', false);\n\t}\n\n\n\n\t/**\n\t * Determine if the given date is after or equal to another given date.\n\t *\n\t **/\n\tisAfterOrEqual(value, after)\n\t{\n\t\treturn this._dateCompare(value, after, 'more', true);\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is an array.\n\t *\n\t **/\n\tisArray(value)\n\t{\n\t\treturn Array.isArray(value);\n\t}\n\n\n\n\t/**\n\t * Determine if the given date is before another given date.\n\t *\n\t **/\n\tisBefore(value, before)\n\t{\n\t\treturn this._dateCompare(value, before, 'less', false);\n\t}\n\n\n\n\t/**\n\t * Determine if the given date is before or equal to another given date.\n\t *\n\t **/\n\tisBeforeOrEqual(value, before)\n\t{\n\t\treturn this._dateCompare(value, before, 'less', true);\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is a boolean.\n\t *\n\t **/\n\tisBoolean(value)\n\t{\n\t\treturn [true, false].includes(value);\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is a date object.\n\t *\n\t **/\n\tisDate(value)\n\t{\n\t\treturn value && Object.prototype.toString.call(value) === '[object Date]' && ! isNaN(value);\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is different to another given value.\n\t *\n\t **/\n\tisDifferent(value, different)\n\t{\n\t\treturn value !== different;\n\t}\n\n\n\n\t/**\n\t * Determine if the given value ends with another given value.\n\t *\n\t **/\n\tisEndingWith(value, sub)\n\t{\n\t\treturn this.isString(value) && value.endsWith(sub);\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is a valid email address.\n\t *\n\t **/\n\tisEmail(value)\n\t{\n\t\treturn new RegExp('^\\\\S+@\\\\S+[\\\\.][0-9a-z]+$').test(String(value).toLowerCase());\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is falsy.\n\t *\n\t **/\n\tisFalsy(value)\n\t{\n\t\treturn [0, '0', false, 'false'].includes(value);\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is within the given array of options.\n\t *\n\t **/\n\tisIn(value, options)\n\t{\n\t\treturn options.includes(value);\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is an integer.\n\t *\n\t **/\n\tisInteger(value)\n\t{\n\t\treturn Number.isInteger(value) && parseInt(value).toString() === value.toString();\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is a JSON string.\n\t *\n\t **/\n\tisJson(value)\n\t{\n\t\ttry {\n        \treturn typeof JSON.parse(value) === 'object';\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Determine if the given value meets the given maximum limit.\n\t *\n\t **/\n\tisMaximum(value, limit)\n\t{\n\t\tvalue = typeof value === 'string' ? value.length : value;\n\n\t\treturn parseFloat(value) <= limit;\n\t}\n\n\n\n\t/**\n\t * Determine if the given value meets the given minimum limit.\n\t *\n\t **/\n\tisMinimum(value, limit)\n\t{\n\t\tvalue = typeof value === 'string' ? value.length : value;\n\n\t\treturn parseFloat(value) >= limit;\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is not within the given array of options.\n\t *\n\t **/\n\tisNotIn(value, options)\n\t{\n\t\treturn ! options.includes(value);\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is numeric (an integer or a float).\n\t *\n\t **/\n\tisNumeric(value)\n\t{\n\t\treturn ! isNaN(parseFloat(value)) && isFinite(value);\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is optional.\n\t *\n\t **/\n\tisOptional(value)\n\t{\n\t\treturn [null, undefined, ''].includes(value);\n\t}\n\n\n\n\t/**\n\t * Determine if the given value satisifies the given regular expression.\n\t *\n\t **/\n\tisRegexMatch(value, expression)\n\t{\n\t\treturn new RegExp(expression).test(String(value).toLowerCase());\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is present.\n\t *\n\t **/\n\tisRequired(value)\n\t{\n\t\treturn ! this.isOptional(value);\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is the same as another given value.\n\t *\n\t **/\n\tisSame(value, different)\n\t{\n\t\treturn value === different;\n\t}\n\n\n\n\t/**\n\t * Determine if the given value starts with another given value.\n\t *\n\t **/\n\tisStartingWith(value, sub)\n\t{\n\t\treturn this.isString(value) && value.startsWith(sub);\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is a string.\n\t *\n\t **/\n\tisString(value)\n\t{\n\t\treturn typeof value === 'string';\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is truthy.\n\t *\n\t **/\n\tisTruthy(value)\n\t{\n\t\treturn [1, '1', true, 'true'].includes(value);\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is a valid URL.\n\t *\n\t **/\n\tisUrl(value)\n\t{\n\t\treturn new RegExp('^(https?:\\\\/\\\\/)?((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*(\\\\?[;&a-z\\\\d%_.~+=-]*)?(\\\\#[-a-z\\\\d_]*)?$')\n\t\t\t .test(String(value).toLowerCase());\n\t}\n\n\n\n\t/**\n\t * Determine if the given value is a valid UUID.\n\t *\n\t **/\n\tisUuid(value)\n\t{\n\t\treturn new RegExp('^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$')\n\t\t\t .test(String(value).toLowerCase());\n\t}\n\n\n\n\t/**\n\t * Determine whether the given value meets the given rules.\n\t *\n\t **/\n\tis(value, rules = [])\n\t{\n\t\t// Check if no rules were specified\n\t\tif (rules.length === 0) return true;\n\n\t\t// Check for an optional value\n\t\tif (rules[0] === 'optional' && this.isOptional(value)) return true;\n\n\t\t// Iterate through the rules\n\t\tfor (let index = 0; index < rules.length; index++) {\n\n\t\t\t// Ignore optional rules\n\t\t\tif (rules[index] === 'optional') continue;\n\n\t\t\t// Determine the method to use\n\t\t\tlet rule = rules[index].split(':')[0][0].toUpperCase()\n\t\t\t\t\t + rules[index].split(':')[0].slice(1);\n\n\t\t\t// Validate the value against the method\n\t\t\tlet result = this[`is${rule}`].apply(this, [value, rules[index].split(':')[1]]);\n\n\t\t\t// Check if the value failed validation\n\t\t\tif (! result) return rules[index].split(':')[0];\n\n\t\t}\n\n\t\t// Otherwise, the value is valid\n\t\treturn true;\n\t}\n\n}\n\n\n\n/**\n * Create an instance of the library.\n *\n **/\nwindow.Iodine = new Iodine();"],"names":["Iodine","_dateCompare","first","second","type","equals","this","isDate","isInteger","getTime","isAfter","value","after","isAfterOrEqual","isArray","Array","isBefore","before","isBeforeOrEqual","isBoolean","includes","Object","prototype","toString","call","isNaN","isDifferent","different","isEndingWith","sub","isString","endsWith","isEmail","RegExp","test","String","toLowerCase","isFalsy","isIn","options","Number","parseInt","isJson","JSON","parse","e","isMaximum","limit","length","parseFloat","isMinimum","isNotIn","isNumeric","isFinite","isOptional","undefined","isRegexMatch","expression","isRequired","isSame","isStartingWith","startsWith","isTruthy","isUrl","isUuid","is","rules","let","index","split","toUpperCase","slice","apply","window"],"mappings":"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"}